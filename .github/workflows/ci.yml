name: C++ CI (calibration)

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    name: ${{ matrix.os }} â€¢ ${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04]
        build_type: [Release, Debug]

    env:
      BUILD_DIR: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- Linux deps ----------
      - name: Install deps (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build libeigen3-dev libceres-dev nlohmann-json3-dev

      # ---------- macOS deps ----------
      - name: Install deps (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          brew update
          brew install cmake ninja eigen ceres-solver nlohmann-json

      # ---------- Windows deps via vcpkg ----------
      - name: Set VCPKG_ROOT (Windows)
        if: startsWith(matrix.os, 'windows')
        shell: pwsh
        run: |
          # Put vcpkg inside the workspace (avoids runner.temp context)
          $vcpkgRoot = "${{ github.workspace }}\vcpkg"
          echo "VCPKG_ROOT=$vcpkgRoot" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "VCPKG_TRIPLET=x64-windows" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Bootstrap vcpkg (Windows)
        if: startsWith(matrix.os, 'windows')
        shell: pwsh
        run: |
          if (-not (Test-Path $env:VCPKG_ROOT)) {
            git clone https://github.com/microsoft/vcpkg $env:VCPKG_ROOT
          }
          & "$env:VCPKG_ROOT\bootstrap-vcpkg.bat"

      - name: Install pkgs (Windows)
        if: start
